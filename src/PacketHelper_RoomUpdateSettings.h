#pragma once

#include "ReceivePacket.h"

class CPacketHelper_RoomUpdateSettings
{
public:
	CPacketHelper_RoomUpdateSettings();
	CPacketHelper_RoomUpdateSettings(Buffer& inPacket);
	void Init();

public:
	int lowFlag;
	int lowMidFlag;
	int highMidFlag;
	int highFlag;
	std::string roomName;
	int unk00;
	int unk01;
	int unk02;
	int unk03;
	int unk04;
	std::string unk05;
	int unk06;
	int unk07;
	int unk08;
	int unk09;
	int unk10;
	int unk11;
	int unk12;
	int unk13;
	int unk14;
	int unk15;
	int unk16;
	int unk17;
	int unk18;
	int unk19;
	int unk20;
	int unk21;
	int unk22;
	int unk23;
	int unk24;
	int unk25;
	int unk26;
	int unk27;
	int unk28; // массив
	int unk29;
	int unk30;
	int unk31;
	int unk32;
	int unk33;
	std::string unk34;
	int unk35;
	int unk36;
	int unk37;
	int unk38;
	int unk39;
	int unk40;
	int unk41;
	int unk42;
	int unk43;
	int unk44;
	int unk45;
	int unk46;
	int unk47;
	int unk48;
	int unk49;
	int unk50;
	std::vector<unk50_data> unk50_vec;
	int unk51;
	int unk52;
	int unk53;
	int unk54;
	int unk55;
	int unk56;
	int unk57;
	int unk58;
	int unk59;
	int unk60;
	std::vector<int> zbLimit;
	int unk61;
	int unk62;
	std::vector<int> unk62_vec;
	int unk63;
	int teamSwitch;
	int unk65;
	int unk66;
	int unk67;
	int unk68;
	int isZbCompetitive;
	int unk70;
	int unk71;
	int unk72;
	int unk73;
	int unk74;
	std::vector<int> unk74_vec;
	int unk75;
	int unk76;
};